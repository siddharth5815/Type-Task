{
 "Resources": {
  "VPCB9E5F0B4": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "TypeTaskStack/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/Resource"
   }
  },
  "VPCpublicsubnet1Subnet1Subnet5E945C8A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public-subnet1"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "TypeTaskStack/VPC/public-subnet1Subnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/public-subnet1Subnet1/Subnet"
   }
  },
  "VPCpublicsubnet1Subnet1RouteTableC748EB17": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TypeTaskStack/VPC/public-subnet1Subnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/public-subnet1Subnet1/RouteTable"
   }
  },
  "VPCpublicsubnet1Subnet1RouteTableAssociation877CC352": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCpublicsubnet1Subnet1RouteTableC748EB17"
    },
    "SubnetId": {
     "Ref": "VPCpublicsubnet1Subnet1Subnet5E945C8A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/public-subnet1Subnet1/RouteTableAssociation"
   }
  },
  "VPCpublicsubnet1Subnet1DefaultRoute019E61AC": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCpublicsubnet1Subnet1RouteTableC748EB17"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/public-subnet1Subnet1/DefaultRoute"
   }
  },
  "VPCpublicsubnet1Subnet1EIPDB8C6150": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "TypeTaskStack/VPC/public-subnet1Subnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/public-subnet1Subnet1/EIP"
   }
  },
  "VPCpublicsubnet1Subnet1NATGatewayE9ECE6EA": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCpublicsubnet1Subnet1EIPDB8C6150",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VPCpublicsubnet1Subnet1Subnet5E945C8A"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "TypeTaskStack/VPC/public-subnet1Subnet1"
     }
    ]
   },
   "DependsOn": [
    "VPCpublicsubnet1Subnet1DefaultRoute019E61AC",
    "VPCpublicsubnet1Subnet1RouteTableAssociation877CC352"
   ],
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/public-subnet1Subnet1/NATGateway"
   }
  },
  "VPCpublicsubnet1Subnet2Subnet5DB70548": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public-subnet1"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "TypeTaskStack/VPC/public-subnet1Subnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/public-subnet1Subnet2/Subnet"
   }
  },
  "VPCpublicsubnet1Subnet2RouteTable033EFFF4": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TypeTaskStack/VPC/public-subnet1Subnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/public-subnet1Subnet2/RouteTable"
   }
  },
  "VPCpublicsubnet1Subnet2RouteTableAssociation3B5DF9A2": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCpublicsubnet1Subnet2RouteTable033EFFF4"
    },
    "SubnetId": {
     "Ref": "VPCpublicsubnet1Subnet2Subnet5DB70548"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/public-subnet1Subnet2/RouteTableAssociation"
   }
  },
  "VPCpublicsubnet1Subnet2DefaultRoute7136ED73": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCpublicsubnet1Subnet2RouteTable033EFFF4"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/public-subnet1Subnet2/DefaultRoute"
   }
  },
  "VPCprivatesubnet1Subnet1Subnet7CAAE151": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.2.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private-subnet1"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "TypeTaskStack/VPC/private-subnet1Subnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/private-subnet1Subnet1/Subnet"
   }
  },
  "VPCprivatesubnet1Subnet1RouteTableDF602893": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TypeTaskStack/VPC/private-subnet1Subnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/private-subnet1Subnet1/RouteTable"
   }
  },
  "VPCprivatesubnet1Subnet1RouteTableAssociationE25AEDE4": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCprivatesubnet1Subnet1RouteTableDF602893"
    },
    "SubnetId": {
     "Ref": "VPCprivatesubnet1Subnet1Subnet7CAAE151"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/private-subnet1Subnet1/RouteTableAssociation"
   }
  },
  "VPCprivatesubnet1Subnet1DefaultRoute1ADDF813": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCpublicsubnet1Subnet1NATGatewayE9ECE6EA"
    },
    "RouteTableId": {
     "Ref": "VPCprivatesubnet1Subnet1RouteTableDF602893"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/private-subnet1Subnet1/DefaultRoute"
   }
  },
  "VPCprivatesubnet1Subnet2SubnetBCF20813": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.3.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private-subnet1"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "TypeTaskStack/VPC/private-subnet1Subnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/private-subnet1Subnet2/Subnet"
   }
  },
  "VPCprivatesubnet1Subnet2RouteTable1BCDF481": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TypeTaskStack/VPC/private-subnet1Subnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/private-subnet1Subnet2/RouteTable"
   }
  },
  "VPCprivatesubnet1Subnet2RouteTableAssociationF97C73B5": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCprivatesubnet1Subnet2RouteTable1BCDF481"
    },
    "SubnetId": {
     "Ref": "VPCprivatesubnet1Subnet2SubnetBCF20813"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/private-subnet1Subnet2/RouteTableAssociation"
   }
  },
  "VPCprivatesubnet1Subnet2DefaultRouteD9EE84EC": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCpublicsubnet1Subnet1NATGatewayE9ECE6EA"
    },
    "RouteTableId": {
     "Ref": "VPCprivatesubnet1Subnet2RouteTable1BCDF481"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/private-subnet1Subnet2/DefaultRoute"
   }
  },
  "VPCIGWB7E252D3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TypeTaskStack/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/IGW"
   }
  },
  "VPCVPCGW99B986DC": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/VPCGW"
   }
  },
  "VPCRestrictDefaultSecurityGroupCustomResource59474679": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "VPCB9E5F0B4",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/VPC/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "VPCB9E5F0B4",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a",
    "aws:asset:property": "Code"
   }
  },
  "EcsCluster97242B84": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/EcsCluster/Resource"
   }
  },
  "AlbSecurityGroup86A59E99": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Allow HTTP traffic to ALB",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTP traffic from anywhere",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/AlbSecurityGroup/Resource"
   }
  },
  "TaskDefTaskRole1EDB4A67": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/TaskDef/TaskRole/Resource"
   }
  },
  "TaskDef54694570": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "Image": "amazon/amazon-ecs-sample",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "TaskDefDefaultContainerLogGroupF9305A4C"
        },
        "awslogs-stream-prefix": "ecs",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "DefaultContainer",
      "PortMappings": [
       {
        "ContainerPort": 8080,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "TaskDefExecutionRoleB4775C97",
      "Arn"
     ]
    },
    "Family": "TypeTaskStackTaskDef8C92B34F",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "TaskDefTaskRole1EDB4A67",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/TaskDef/Resource"
   }
  },
  "TaskDefDefaultContainerLogGroupF9305A4C": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/TaskDef/DefaultContainer/LogGroup/Resource"
   }
  },
  "TaskDefExecutionRoleB4775C97": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/TaskDef/ExecutionRole/Resource"
   }
  },
  "TaskDefExecutionRoleDefaultPolicy0DBB737A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TaskDefDefaultContainerLogGroupF9305A4C",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TaskDefExecutionRoleDefaultPolicy0DBB737A",
    "Roles": [
     {
      "Ref": "TaskDefExecutionRoleB4775C97"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/TaskDef/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "ServiceSecurityGroup61DE1A49": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "TypeTaskStack/ServiceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/ServiceSecurityGroup/Resource"
   }
  },
  "ServiceSecurityGroupfromTypeTaskStackAlbSecurityGroupF41B300F808034E04306": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow traffic from ALB",
    "FromPort": 8080,
    "GroupId": {
     "Fn::GetAtt": [
      "ServiceSecurityGroup61DE1A49",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "AlbSecurityGroup86A59E99",
      "GroupId"
     ]
    },
    "ToPort": 8080
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/ServiceSecurityGroup/from TypeTaskStackAlbSecurityGroupF41B300F:8080"
   }
  },
  "FargateServiceAC2B3B85": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "EcsCluster97242B84"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 2,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "DefaultContainer",
      "ContainerPort": 8080,
      "TargetGroupArn": {
       "Ref": "ALBListenerECSGroupB9D8CD9F"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "ServiceSecurityGroup61DE1A49",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "VPCprivatesubnet1Subnet1Subnet7CAAE151"
       },
       {
        "Ref": "VPCprivatesubnet1Subnet2SubnetBCF20813"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "TaskDef54694570"
    }
   },
   "DependsOn": [
    "ALBListenerECSGroupB9D8CD9F",
    "ALBListener3B99FF85",
    "TaskDefTaskRole1EDB4A67"
   ],
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/FargateService/Service"
   }
  },
  "ALBAEE750D2": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "AlbSecurityGroup86A59E99",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "VPCpublicsubnet1Subnet1Subnet5E945C8A"
     },
     {
      "Ref": "VPCpublicsubnet1Subnet2Subnet5DB70548"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "VPCpublicsubnet1Subnet1DefaultRoute019E61AC",
    "VPCpublicsubnet1Subnet1RouteTableAssociation877CC352",
    "VPCpublicsubnet1Subnet2DefaultRoute7136ED73",
    "VPCpublicsubnet1Subnet2RouteTableAssociation3B5DF9A2"
   ],
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/ALB/Resource"
   }
  },
  "ALBListener3B99FF85": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "ALBListenerECSGroupB9D8CD9F"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "ALBAEE750D2"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/ALB/Listener/Resource"
   }
  },
  "ALBListenerECSGroupB9D8CD9F": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckIntervalSeconds": 30,
    "HealthCheckPath": "/",
    "Port": 8080,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/ALB/Listener/ECSGroup/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31SXU/DMAz8LbxnASb+wBgfmoSgWhGvyE29YpY5Vex0QlX/O2q7rQMJnnx3vkRnJ3N7fXNjry5gLzNXbmeeCtvmCm5rYC/vLbq5bd9qZ5YbfsuWJkuFJ5englF7bULrkBRfofA46ZO2EAmOQCnwydyD+1XWl2fQR1Dcw5fJIjWgOF28YsXIeDKMSQ5soQruY4esJkeXIunXYwypHjL8K6y4iijSGXRi26VPohh71xE+QKygjy/bO9wQ0zH8byWwAjHGM+1wNsfYkBsXMsLOEOxsuw7jmoaaBU9umGtEnfGhEts+heoU/Yg7gx5EyfkAZQEe2BFXzdy2i7r25IYNPwUob4feONEPfu4jUeSD54jP+q8QK9RThjPadWaNElLsh0uiYTfRDf/RymJoqMR4C4JmIYKaK1TEVX/mJWmdhvdeBi6HLXaGQ4n2Uy6b+ZW97r/ppxDNYmKlHdr1WL8BSJRSFMMCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "TypeTaskStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "ALBDnsName": {
   "Value": {
    "Fn::GetAtt": [
     "ALBAEE750D2",
     "DNSName"
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}